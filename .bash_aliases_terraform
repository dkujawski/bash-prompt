
alias tfi="terraform init -upgrade"
alias tfp="terraform plan -var tf_mode=apply -out /tmp/${AWS_OKTA_PROFILE}_${GIT_BRANCH}_$(date +%s).plan"

alias t12ip="terraform12 init -upgrade && terraform12 plan -out /tmp/dkujawski_${GIT_BRANCH}_$(date +%s).plan"

function _tfip_exec {
    profile="${1}"
    plan="/tmp/${profile}_${GIT_BRANCH}_$(date +%s).plan"
    mkdir -p $(dirname ${plan})
    echo "aws-okta exec \"${profile}\" -- terraform init -upgrade" \
    && aws-okta exec "${profile}" -- terraform init -upgrade \
    && echo "aws-okta exec \"${profile}\" -- terraform plan -var tf_mode=apply -out \"${plan}\" ${TFIP_ARGS}" \
    && aws-okta exec "${profile}" -- terraform plan -var tf_mode=apply -out "${plan}" ${TFIP_ARGS} \
    && echo "TERRAFORM_PLAN=${plan}" \
    && export TERRAFORM_PLAN="${plan}"
}

function _tfip {
    profile="${1}"
    repo=$(basename $(pwd))
    if [ ${repo%%.*} = "tfs" ]; then
        # extract env info from current path
        context=${repo#*.}
        AWS_OKTA_PROFILE=${context%.*}
        AWS_DEFAULT_REGION=${context#*.}
        if [ -z ${profile+x} ]; then 
            profile="${AWS_OKTA_PROFILE}"
        fi
    fi
    if [ -z ${AWS_DEFAULT_REGION+x} ]; then
        echo "AWS_DEFAULT_REGION not set!"
    elif [ -z ${1+x} ]; then
        if [ -z ${AWS_OKTA_PROFILE+x} ]; then 
            echo "AWS_OKTA_PROFILE not set!"
            echo "Usage: tfip aws-profile-name file.plan"
        else
            profile="${AWS_OKTA_PROFILE}"
            _tfip_exec "${profile}"
        fi
    else
        _tfip_exec "${profile}"
    fi
}
alias tfip=_tfip

function _tfa_exec {
    profile="${1}"
    plan="${2}"
    if [ -e "${plan}" ]; then
        echo "aws-okta exec \"${profile}\" -- terraform apply \"${plan}\""
        aws-okta exec "${profile}" -- terraform apply "${plan}"
    else
        echo "plan not found: ${plan}"
    fi
}

function _tfa {
    profile="${1}"
    plan="${2}"
    repo=$(basename $(pwd))
    if [ ${repo%%.*} = "tfs" ]; then
        # extract env info from current path
        context=${repo#*.}
        AWS_OKTA_PROFILE=${context%.*}
        AWS_DEFAULT_REGION=${context#*.}
        if [ -z ${profile+x} ]; then 
            profile="${AWS_OKTA_PROFILE}"
        fi
    fi
    if [ -z ${AWS_DEFAULT_REGION+x} ]; then
        echo "AWS_DEFAULT_REGION not set!"
        return
    fi
    if [ -z ${1+x} ]; then
        if [ -z ${AWS_OKTA_PROFILE+x} ]; then 
            echo "Usage: tfa aws-profile-name file.plan"
            return
        else
            profile="${AWS_OKTA_PROFILE}"
        fi
    fi
    if [ -z ${2+x} ]; then
        if [ -z ${TERRAFORM_PLAN+x} ]; then
            echo "Usage: tfa aws-profile-name file.plan"
            return
        else
            plan="${TERRAFORM_PLAN}"
            export TERRAFORM_PLAN=""
        fi
    fi
    _tfa_exec "${profile}" "${plan}"
    found_plans=( $(find "/tmp/" -name "${profile}_${GIT_BRANCH}_*.plan" -type f -mtime +14 -print 2>/dev/null) )
    if [ ${#found_plans[@]} -gt 0 ]; then 
       echo "found old plans"
       for p in ${found_plans[@]}; do 
           echo "$p"
       done
       echo "${#found_plans[@]}"
       read -p "Delete old plans? y/N" -n 1 -r
       echo 
       if [[ $REPLY =~ ^[Yy]$ ]]; then
           for p in ${found_plans[@]}; do 
               rm -f "$p"
           done
       fi
    fi
}
alias tfa=_tfa

function _acc_on {
    # dkdev-sandbox
    export AWS_ALTERNATE_ACCESS_KEY_ID=AKIAUADHMNT2DMZHJFCA
    export AWS_ALTERNATE_SECRET_ACCESS_KEY=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
    # dkdev-sandbox2
    export AWS_ACCESS_KEY_ID=AKIA5P3RCBSOQ7M7SCRP
    export AWS_SECRET_ACCESS_KEY=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
}
alias acc_on=_acc_on

function _acc_off {
    # unset AWS_PROFILE
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    # unset AWS_ALTERNATE_PROFILE
    unset AWS_ALTERNATE_ACCESS_KEY_ID
    unset AWS_ALTERNATE_SECRET_ACCESS_KEY
}
alias acc_off=_acc_off
