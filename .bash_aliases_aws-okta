
function _aws-okta-exec {
    if [ -z ${1+x} ]; then
        echo "Usage: aoe aws-profile-name"
    else
        aws-okta exec "${1}" -- bash
    fi
}
alias aoe=_aws-okta-exec

switch_aws() {
	local account_alias="$1"

	# check if we need to MFA
	if ! aws-okta exec "$account_alias" -- true; then
		return 1
	fi

	# clear out the existing credentials/settings
	unset ${!AWS_*}

	# import our new AWS environment
	eval $(aws-okta exec "$account_alias" -- env | grep ^AWS | sed -e "s;^;export ;g")
	export AWS_ACCOUNT="$account_alias"

	# import any custom variables for this account
	[ -f ~/.aws/$account_alias/env-vars ] && . ~/.aws/$account_alias/env-vars

	# if we don't have a defualt region set, try $_AWS_DEFAULT_REGION
	[ -z "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION="${_AWS_DEFAULT_REGION}"
	# if that also wasn't set use us-west-2
	[ -z "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION="us-west-2"
}

alias switch-aws=switch_aws

# CLI tab-completion for switch-aws
_switch-aws() {
	local cur=${COMP_WORDS[COMP_CWORD]}
	COMPREPLY=( $(compgen -W "$(grep '^\[profile' ~/.aws/config | awk '{print $2}' | sed -e 's;];;g')" -- $cur) )
}
complete -F _switch-aws switch_aws
complete -F _switch-aws switch-aws

# for MFA admin users
# requires something like this in your ~/.aws/config (recommend putting in ~/.aws/config-pre if you're using build-aws-config):
# [profile mfa]
# aws_access_key_id = AKIAEXAMPLE
# aws_secret_access_key = blahblahexample
# mfa_serial = arn:aws:iam::accountid:mfa/username
switch_aws_mfa() {
	local account_alias="$1"

	# extract our role_arn and mfa_serial
	local role_arn=$(awk -v section="[profile ${account_alias}]" -v key="role_arn" 'BEGIN { FS = " ?= ?" }; $0==section { f=1; next }; /^\[/ { f=0; next }; f && $1==key { print $2 }' ~/.aws/config)
	local mfa_serial=$(awk -v section="[profile mfa]" -v key="mfa_serial" 'BEGIN { FS = " ?= ?" }; $0==section { f=1; next }; /^\[/ { f=0; next }; f && $1==key { print $2 }' ~/.aws/config)

	if [ -z $role_arn ]; then
		echo "No role arn found for that profile"
		return 1
	fi
	if [ -z $mfa_serial ]; then
		echo "No mfa_serial found in profile mfa"
		return 1
	fi

	echo "Enter MFA token:"
	local mfa_token
	read mfa_token

	unset ${!AWS_*}
	eval $(
		AWS_PROFILE=mfa aws sts assume-role \
			--role-arn=${role_arn} \
			--serial-number=${mfa_serial} \
			--token-code=${mfa_token} \
			--role-session-name="switch-aws-mfa" | \
		jq -r '.Credentials |
				"export AWS_ACCESS_KEY_ID=\(.AccessKeyId)",
				"export AWS_SECRET_ACCESS_KEY=\(.SecretAccessKey)",
				"export AWS_SESSION_TOKEN=\(.SessionToken)"
			'
		)

	# import any custom variables for this account
	[ -f ~/.aws/$account_alias/env-vars ] && . ~/.aws/$account_alias/env-vars

	# if we don't have a defualt region set, try $_AWS_DEFAULT_REGION
	[ -z "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION="${_AWS_DEFAULT_REGION}"
	# if that also wasn't set use us-west-2
	[ -z "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION="us-west-2"

	export AWS_ACCOUNT="${account_alias}+mfa"
}

alias switch-aws-mfa=switch_aws_mfa
complete -F _switch-aws switch_aws_mfa
complete -F _switch-aws switch-aws-mfa

